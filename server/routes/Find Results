Searching 23296 files for "Devel"

/Users/alexleitch/Documents/Heist/scout-dev/bower_components/angular-mocks/angular-mocks.js:
  888   *
  889   * *Note*: For fake HTTP backend implementation suitable for end-to-end testing or backend-less
  890:  * development please see {@link ngMockE2E.$httpBackend e2e $httpBackend mock}.
  891   *
  892   * During unit testing, we want our unit tests to run quickly and have no external dependencies so
  893:  * we don’t want to send [XHR](https://developer.mozilla.org/en/xmlhttprequest) or
  894   * [JSONP](http://en.wikipedia.org/wiki/JSONP) requests to a real server. All we really need is
  895   * to verify whether a certain request has been sent or not, or alternatively just let the
  ...
 1787   * @module ngMockE2E
 1788   * @description
 1789:  * Fake HTTP backend implementation suitable for end-to-end testing or backend-less development of
 1790   * applications that use the {@link ng.$http $http service}.
 1791   *
 ....
 1799   *
 1800   * As opposed to unit-testing, in an end-to-end testing scenario or in scenario when an application
 1801:  * is being developed with the real backend api replaced with a mock, it is often desirable for
 1802   * certain category of requests to bypass the mock and issue a real http request (e.g. to fetch
 1803   * templates or static files from the webserver). To configure the backend with this behavior

/Users/alexleitch/Documents/Heist/scout-dev/bower_components/angular-ui-router/CONTRIBUTING.md:
   16  is a bug, it's best to talk it out on
   17  [StackOverflow](http://stackoverflow.com/questions/ask?tags=angularjs,angular-ui-router) before reporting it. This
   18: keeps development streamlined, and helps us focus on building great software.
   19  
   20  
   ..
   33  # Contribute
   34  
   35: **(1)** See the **[Developing](#developing)** section below, to get the development version of UI-Router up and running on your local machine.
   36  
   37  **(2)** Check out the [roadmap](https://github.com/angular-ui/ui-router/milestones) to see where the project is headed, and if your feature idea fits with where we're headed.
   ..
   48  
   49  
   50: # Developing
   51  
   52  UI-Router uses <code>grunt >= 0.4.x</code>. Make sure to upgrade your environment and read the
   ..
   56  
   57  * [grunt-cli](https://github.com/gruntjs/grunt-cli) - run: `$ npm install -g grunt-cli`
   58: * Then, install the development dependencies by running `$ npm install` from the project directory
   59  
   60  There are a number of targets in the gruntfile that are used to generating different builds:

/Users/alexleitch/Documents/Heist/scout-dev/bower_components/angular-ui-router/README.md:
   27  
   28  -
   29: **Note:** *UI-Router is under active development. As such, while this library is well-tested, the API may change. Consider using it in production applications only if you're comfortable following a changelog and updating your usage accordingly.*
   30  
   31  
   ..
   33  
   34  **(1)** Get UI-Router in one of the following ways:
   35:  - clone & [build](CONTRIBUTING.md#developing) this repository
   36   - [download the release](http://angular-ui.github.io/ui-router/release/angular-ui-router.js) (or [minified](http://angular-ui.github.io/ui-router/release/angular-ui-router.min.js))
   37   - via **[Bower](http://bower.io/)**: by running `$ bower install angular-ui-router` from your console

/Users/alexleitch/Documents/Heist/scout-dev/bower_components/angular-ui/build/angular-ui-ieshiv.js:
   29                  ];
   30  
   31:   window.myCustomTags =  window.myCustomTags || []; // externally defined by developer using angular-ui directives
   32    tags.push.apply(tags, window.myCustomTags);
   33  

/Users/alexleitch/Documents/Heist/scout-dev/bower_components/angular-ui/common/ieshiv/ieshiv.js:
   22                  ];
   23  
   24:   window.myCustomTags =  window.myCustomTags || []; // externally defined by developer using angular-ui directives
   25    tags.push.apply(tags, window.myCustomTags);
   26  

/Users/alexleitch/Documents/Heist/scout-dev/bower_components/angular-ui/modules/directives/date/README.md:
    7  - JQuery
    8  - JQueryUI
    9: - [Date.toISOString()](https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Date/toISOString) (requires [polyfill](https://github.com/kriskowal/es5-shim/) for &le;IE8)
   10  
   11  # Usage

/Users/alexleitch/Documents/Heist/scout-dev/bower_components/angular-ui/README.md:
   22  The modules can be found in the [Directives](https://github.com/angular-ui/angular-ui/tree/master/modules/directives) and [Filters](https://github.com/angular-ui/angular-ui/tree/master/modules/filters) folders. Check out the readme file associated with each module for specific module usage information.
   23  
   24: ## Development
   25  
   26  You do not need to build the project to use it - see above - but if you are working on it then this is what you need to know.
   ..
   50  ```
   51  
   52: ### Test & Develop
   53  
   54  The modules come with unit tests that should be run on any changes and certainly before commiting changes to the project.  The unit tests should also provide further insight into the usage of the modules.

/Users/alexleitch/Documents/Heist/scout-dev/bower_components/angular-ui/test/lib/angular-1.0.1/angular-mocks.js:
  635   *
  636   * *Note*: For fake http backend implementation suitable for end-to-end testing or backend-less
  637:  * development please see {@link ngMockE2E.$httpBackend e2e $httpBackend mock}.
  638   *
  639   * During unit testing, we want our unit tests to run quickly and have no external dependencies so
  640:  * we don’t want to send {@link https://developer.mozilla.org/en/xmlhttprequest XHR} or
  641   * {@link http://en.wikipedia.org/wiki/JSONP JSONP} requests to a real server. All we really need is
  642   * to verify whether a certain request has been sent or not, or alternatively just let the
  ...
 1392   * @name ngMockE2E.$httpBackend
 1393   * @description
 1394:  * Fake HTTP backend implementation suitable for end-to-end testing or backend-less development of
 1395   * applications that use the {@link ng.$http $http service}.
 1396   *
 ....
 1404   *
 1405   * As opposed to unit-testing, in an end-to-end testing scenario or in scenario when an application
 1406:  * is being developed with the real backend api replaced with a mock, it is often desirable for
 1407   * certain category of requests to bypass the mock and issue a real http request (e.g. to fetch
 1408   * templates or static files from the webserver). To configure the backend with this behavior

/Users/alexleitch/Documents/Heist/scout-dev/bower_components/angular-ui/test/lib/angular-1.0.1/angular.js:
 3548   *
 3549   * For information on how the compiler works, see the
 3550:  * {@link guide/compiler Angular HTML Compiler} section of the Developer Guide.
 3551   */
 3552  
 ....
 5247   * @description
 5248   * The $location service parses the URL in the browser address bar (based on the
 5249:  * {@link https://developer.mozilla.org/en/window.location window.location}) and makes the URL
 5250   * available to your application. Changes to the URL in the address bar are reflected into
 5251   * $location service and changes to $location are reflected into the browser address bar.
 ....
 5262   * - Represents the URL object as a set of methods (protocol, host, port, path, search, hash).
 5263   *
 5264:  * For more information see {@link guide/dev_guide.services.$location Developer Guide: Angular
 5265   * Services: Using $location}
 5266   */
 ....
 7317   * Every application has a single root {@link ng.$rootScope.Scope scope}.
 7318   * All other scopes are child scopes of the root scope. Scopes provide mechanism for watching the model and provide
 7319:  * event processing life-cycle. See {@link guide/scope developer guide on scopes}.
 7320   */
 7321  function $RootScopeProvider(){
 ....
 8267       * @description
 8268       * The `$http` service is a core Angular service that facilitates communication with the remote
 8269:      * HTTP servers via browser's {@link https://developer.mozilla.org/en/xmlhttprequest
 8270       * XMLHttpRequest} object or via {@link http://en.wikipedia.org/wiki/JSONP JSONP}.
 8271       *
 ....
 8501       *    - **timeout** – `{number}` – timeout in milliseconds.
 8502       *    - **withCredentials** - `{boolean}` - whether to to set the `withCredentials` flag on the
 8503:      *      XHR object. See {@link https://developer.mozilla.org/en/http_access_control#section_5
 8504       *      requests with credentials} for more information.
 8505       *
 ....
 9213   *
 9214   * For more information about how angular filters work, and how to create your own filters, see
 9215:  * {@link guide/dev_guide.templates.filters Understanding Angular Filters} in the angular Developer
 9216   * Guide.
 9217   */
 ....
 12428   *
 12429   * @description
 12430:  * Enables [CSP (Content Security Policy)](https://developer.mozilla.org/en/Security/CSP) support.
 12431   * This directive should be used on the root element of the application (typically the `<html>`
 12432   * element or other element with the {@link ng.directive:ngApp ngApp}

/Users/alexleitch/Documents/Heist/scout-dev/bower_components/angular-ui/test/lib/angular/angular-1.0.0rc4.js:
 3507   *
 3508   * For information on how the compiler works, see the
 3509:  * {@link guide/dev_guide.compiler Angular HTML Compiler} section of the Developer Guide.
 3510   */
 3511  
 ....
 5104   *
 5105   * @description
 5106:  * The $location service parses the URL in the browser address bar (based on the {@link https://developer.mozilla.org/en/window.location window.location}) and makes the URL available to your application. Changes to the URL in the address bar are reflected into $location service and changes to $location are reflected into the browser address bar.
 5107   *
 5108   * **The $location service:**
 ....
 5117   * - Represents the URL object as a set of methods (protocol, host, port, path, search, hash).
 5118   *
 5119:  * For more information see {@link guide/dev_guide.services.$location Developer Guide: Angular Services: Using $location}
 5120   */
 5121  
 ....
 6943   * Every application has a single root {@link angular.module.ng.$rootScope.Scope scope}.
 6944   * All other scopes are child scopes of the root scope. Scopes provide mechanism for watching the model and provide
 6945:  * event processing life-cycle. See {@link guide/dev_guide.scopes developer guide on scopes}.
 6946   */
 6947  function $RootScopeProvider(){
 ....
 8242       * @description
 8243       * The `$http` service is a core Angular service that facilitates communication with the remote
 8244:      * HTTP servers via browser's {@link https://developer.mozilla.org/en/xmlhttprequest
 8245       * XMLHttpRequest} object or via {@link http://en.wikipedia.org/wiki/JSONP JSONP}.
 8246       *
 ....
 8473       *    - **timeout** â€“ `{number}` â€“ timeout in milliseconds.
 8474       *    - **withCredentials** - `{boolean}` - whether to to set the `withCredentials` flag on the
 8475:      *      XHR object. See {@link https://developer.mozilla.org/en/http_access_control#section_5
 8476       *      requests with credentials} for more information.
 8477       *
 ....
 9061   *
 9062   * For more information about how angular filters work, and how to create your own filters, see
 9063:  * {@link guide/dev_guide.templates.filters Understanding Angular Filters} in the angular Developer
 9064   * Guide.
 9065   */
 ....
 13821          forEach(selectElement.children(), function(option) {
 13822            if (option.value == '') {
 13823:             // developer declared null option, so user should be able to select it
 13824              nullOption = jqLite(option).remove();
 13825              // compile the element since there might be bindings in it

/Users/alexleitch/Documents/Heist/scout-dev/bower_components/angular-ui/test/lib/angular/angular-1.0.0rc5.js:
 3393   *
 3394   * For information on how the compiler works, see the
 3395:  * {@link guide/dev_guide.compiler Angular HTML Compiler} section of the Developer Guide.
 3396   */
 3397  
 ....
 4990   *
 4991   * @description
 4992:  * The $location service parses the URL in the browser address bar (based on the {@link https://developer.mozilla.org/en/window.location window.location}) and makes the URL available to your application. Changes to the URL in the address bar are reflected into $location service and changes to $location are reflected into the browser address bar.
 4993   *
 4994   * **The $location service:**
 ....
 5003   * - Represents the URL object as a set of methods (protocol, host, port, path, search, hash).
 5004   *
 5005:  * For more information see {@link guide/dev_guide.services.$location Developer Guide: Angular Services: Using $location}
 5006   */
 5007  
 ....
 6808   * Every application has a single root {@link angular.module.ng.$rootScope.Scope scope}.
 6809   * All other scopes are child scopes of the root scope. Scopes provide mechanism for watching the model and provide
 6810:  * event processing life-cycle. See {@link guide/dev_guide.scopes developer guide on scopes}.
 6811   */
 6812  function $RootScopeProvider(){
 ....
 7727       * @description
 7728       * The `$http` service is a core Angular service that facilitates communication with the remote
 7729:      * HTTP servers via browser's {@link https://developer.mozilla.org/en/xmlhttprequest
 7730       * XMLHttpRequest} object or via {@link http://en.wikipedia.org/wiki/JSONP JSONP}.
 7731       *
 ....
 7961       *    - **timeout** â€“ `{number}` â€“ timeout in milliseconds.
 7962       *    - **withCredentials** - `{boolean}` - whether to to set the `withCredentials` flag on the
 7963:      *      XHR object. See {@link https://developer.mozilla.org/en/http_access_control#section_5
 7964       *      requests with credentials} for more information.
 7965       *
 ....
 8585   *
 8586   * For more information about how angular filters work, and how to create your own filters, see
 8587:  * {@link guide/dev_guide.templates.filters Understanding Angular Filters} in the angular Developer
 8588   * Guide.
 8589   */
 ....
 13222          forEach(selectElement.children(), function(option) {
 13223            if (option.value == '') {
 13224:             // developer declared null option, so user should be able to select it
 13225              nullOption = jqLite(option).remove();
 13226              // compile the element since there might be bindings in it

/Users/alexleitch/Documents/Heist/scout-dev/bower_components/angular-ui/test/lib/angular/angular-mocks.js:
  646   *
  647   * *Note*: For fake http backend implementation suitable for end-to-end testing or backend-less
  648:  * development please see {@link angular.module.ngMockE2E.$httpBackend e2e $httpBackend mock}.
  649   *
  650   * During unit testing, we want our unit tests to run quickly and have no external dependencies so
  651:  * we don’t want to send {@link https://developer.mozilla.org/en/xmlhttprequest XHR} or
  652   * {@link http://en.wikipedia.org/wiki/JSONP JSONP} requests to a real server. All we really need is
  653   * to verify whether a certain request has been sent or not, or alternatively just let the
  ...
 1354   * @name angular.module.ngMockE2E.$httpBackend
 1355   * @description
 1356:  * Fake HTTP backend implementation suitable for end-to-end testing or backend-less development of
 1357   * applications that use the {@link angular.module.ng.$http $http service}.
 1358   *
 ....
 1366   *
 1367   * As opposed to unit-testing, in an end-to-end testing scenario or in scenario when an application
 1368:  * is being developed with the real backend api replaced with a mock, it is often desirable for
 1369   * certain category of requests to bypass the mock and issue a real http request (e.g. to fetch
 1370   * templates or static files from the webserver). To configure the backend with this behavior

/Users/alexleitch/Documents/Heist/scout-dev/bower_components/angular-ui/test/lib/jquery/jquery-1.7.2.js:
 1512  	// are used, namely in IE. Short-circuiting here helps us to
 1513  	// avoid an eval call (in setAttribute) which can cause CSP
 1514: 	// to go haywire. See: https://developer.mozilla.org/en/Security/CSP
 1515  	if ( div.attachEvent ) {
 1516  		for ( i in {

/Users/alexleitch/Documents/Heist/scout-dev/bower_components/angular-youtube-mb/README.md:
   74  ```
   75  
   76: A full list of `player` methods can be found [here](https://developers.google.com/youtube/iframe_api_reference).
   77  
   78  ### Utilities
   ..
   96  ### Player Parameters
   97  
   98: YouTube's embedded player can take a number of optional parameters. You can find [a full list here](https://developers.google.com/youtube/player_parameters#Parameters).
   99  
  100  For example, you could hide the player's controls and have it start automatically. Add `player-vars` to your embedded player.
  ...
  127  Check out [the demo](http://brandly.github.io/angular-youtube-embed) and [the code behind it](https://github.com/brandly/angular-youtube-embed/blob/master/src/demo/the.js).
  128  
  129: ### Development
  130  
  131  First, make sure you have the necessary dependencies installed locally and [gulp](http://gulpjs.com/) installed globally

/Users/alexleitch/Documents/Heist/scout-dev/bower_components/angular/angular.js:
 5664   *
 5665   * For information on how the compiler works, see the
 5666:  * {@link guide/compiler Angular HTML Compiler} section of the Developer Guide.
 5667   */
 5668  
 ....
 5683        CLASS_DIRECTIVE_REGEXP = /(([\d\w_\-]+)(?:\:([^;]+))?;?)/;
 5684  
 5685:   // Ref: http://developers.whatwg.org/webappapis.html#event-handler-idl-attributes
 5686    // The assumption is that future DOM event attribute names will begin with
 5687    // 'on' and be composed of only English letters.
 ....
 7615       * @description
 7616       * The `$http` service is a core Angular service that facilitates communication with the remote
 7617:      * HTTP servers via the browser's [XMLHttpRequest](https://developer.mozilla.org/en/xmlhttprequest)
 7618       * object or via [JSONP](http://en.wikipedia.org/wiki/JSONP).
 7619       *
 ....
 8002       *      that should abort the request when resolved.
 8003       *    - **withCredentials** - `{boolean}` - whether to set the `withCredentials` flag on the
 8004:      *      XHR object. See [requests with credentials](https://developer.mozilla.org/docs/Web/HTTP/Access_control_CORS#Requests_with_credentials)
 8005       *      for more information.
 8006       *    - **responseType** - `{string}` - see
 8007:      *      [requestType](https://developer.mozilla.org/en-US/docs/DOM/XMLHttpRequest#responseType).
 8008       *
 8009       * @returns {HttpPromise} Returns a {@link ng.$q promise} object with the
 ....
 9376  /**
 9377   * LocationHashbangUrl represents url
 9378:  * This object is exposed as $location service when developer doesn't opt into html5 mode.
 9379   * It also serves as the base class for html5 mode fallback on legacy browsers.
 9380   *
 ....
 9768   * @description
 9769   * The $location service parses the URL in the browser address bar (based on the
 9770:  * [window.location](https://developer.mozilla.org/en/window.location)) and makes the URL
 9771   * available to your application. Changes to the URL in the address bar are reflected into
 9772   * $location service and changes to $location are reflected into the browser address bar.
 ....
 9783   * - Represents the URL object as a set of methods (protocol, host, port, path, search, hash).
 9784   *
 9785:  * For more information see {@link guide/$location Developer Guide: Using $location}
 9786   */
 9787  
 ....
 12050   * between the model and the view, via a mechanism for watching the model for changes.
 12051   * They also provide an event emission/broadcast and subscription facility. See the
 12052:  * {@link guide/scope developer guide on scopes}.
 12053   */
 12054  function $RootScopeProvider(){
 .....
 12224         *   previous call to `watchExpression` are not equal (with the exception of the initial run,
 12225         *   see below). Inequality is determined according to reference inequality,
 12226:        *   [strict comparison](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Comparison_Operators)
 12227         *    via the `!==` Javascript operator, unless `objectEquality == true`
 12228         *   (see next point)
 .....
 13321   * @description
 13322   *
 13323:  * The `$sceDelegateProvider` provider allows developers to configure the {@link ng.$sceDelegate
 13324   * $sceDelegate} service.  This allows one to get/set the whitelists and blacklists used to ensure
 13325   * that the URLs used for sourcing Angular templates are safe.  Refer {@link
 .....
 13610   * @description
 13611   *
 13612:  * The $sceProvider provider allows developers to configure the {@link ng.$sce $sce} service.
 13613   * -   enable/disable Strict Contextual Escaping (SCE) in a module
 13614   * -   override the default implementation with a custom delegate
 .....
 13721   * browsers.
 13722   *
 13723:  * ## This feels like too much overhead for the developer?
 13724   *
 13725   * It's important to remember that SCE only applies to interpolation expressions.
 .....
 14499   *
 14500   * References:
 14501:  *   http://developer.mozilla.org/en-US/docs/Web/API/HTMLAnchorElement
 14502   *   http://www.aptana.com/reference/html/api/HTMLAnchorElement.html
 14503   *   http://url.spec.whatwg.org/#urlutils
 .....
 14665   *
 14666   * For more information about how angular filters work, and how to create your own filters, see
 14667:  * {@link guide/filter Filters} in the Angular Developer Guide.
 14668   */
 14669  
 .....
 15126      // safely round numbers in JS without hitting imprecisions of floating-point arithmetics
 15127      // inspired by:
 15128:     // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/round
 15129      number = +(Math.round(+(number.toString() + 'e' + fractionSize)).toString() + 'e' + -fractionSize);
 15130  
 .....
 17131    // In composition mode, users are still inputing intermediate text buffer,
 17132    // hold the listener until composition is done.
 17133:   // More about composition events: https://developer.mozilla.org/en-US/docs/Web/API/CompositionEvent
 17134    if (!$sniffer.android) {
 17135      var composing = false;
 .....
 19148   * @element html
 19149   * @description
 19150:  * Enables [CSP (Content Security Policy)](https://developer.mozilla.org/en/Security/CSP) support.
 19151   *
 19152:  * This is necessary when developing things like Google Chrome Extensions.
 19153   *
 19154   * CSP forbids apps to use `eval` or `Function(string)` generated functions (among other things).
 .....
 19600   * Specify custom behavior on blur event.
 19601   *
 19602:  * A [blur event](https://developer.mozilla.org/en-US/docs/Web/Events/blur) fires when
 19603   * an element has lost focus.
 19604   *
 .....
 20811   *
 20812   * By using !important, the show and hide behavior will work as expected despite any clash between CSS selector
 20813:  * specificity (when !important isn't used with any conflicting styles). If a developer chooses to override the
 20814   * styling to change how to hide an element then it is just a matter of using !important in their own CSS code.
 20815   *
 .....
 20968   *
 20969   * By using !important, the show and hide behavior will work as expected despite any clash between CSS selector
 20970:  * specificity (when !important isn't used with any conflicting styles). If a developer chooses to override the
 20971   * styling to change how to hide an element then it is just a matter of using !important in their own CSS code.
 20972   *

/Users/alexleitch/Documents/Heist/scout-dev/bower_components/jquery/dist/jquery.js:
 5725  var
 5726  	// Swappable if display is none or starts with table except "table", "table-cell", or "table-caption"
 5727: 	// See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display
 5728  	rdisplayswap = /^(none|table(?!-c[ea]).+)/,
 5729  	rnumsplit = new RegExp( "^(" + pnum + ")(.*)$", "i" ),

/Users/alexleitch/Documents/Heist/scout-dev/bower_components/jquery/src/css.js:
   23  var
   24  	// Swappable if display is none or starts with table except "table", "table-cell", or "table-caption"
   25: 	// See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display
   26  	rdisplayswap = /^(none|table(?!-c[ea]).+)/,
   27  	rnumsplit = new RegExp( "^(" + pnum + ")(.*)$", "i" ),

/Users/alexleitch/Documents/Heist/scout-dev/bower_components/lodash/dist/lodash.compat.js:
 6486       * whitespace, and correctly escapes quotes within interpolated code.
 6487       *
 6488:      * Note: In the development build, `_.template` utilizes sourceURLs for easier
 6489:      * debugging. See http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl
 6490       *
 6491       * For more information on precompiling templates see:
 ....
 6493       *
 6494       * For more information on Chrome extension sandboxes see:
 6495:      * http://developer.chrome.com/stable/extensions/sandboxingEval.html
 6496       *
 6497       * @static
 ....
 6649  
 6650        // Use a sourceURL for easier debugging.
 6651:       // http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl
 6652        var sourceURL = '\n/*\n//# sourceURL=' + (options.sourceURL || '/lodash/template/source[' + (templateCounter++) + ']') + '\n*/';
 6653  

/Users/alexleitch/Documents/Heist/scout-dev/bower_components/lodash/dist/lodash.js:
 6136       * whitespace, and correctly escapes quotes within interpolated code.
 6137       *
 6138:      * Note: In the development build, `_.template` utilizes sourceURLs for easier
 6139:      * debugging. See http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl
 6140       *
 6141       * For more information on precompiling templates see:
 ....
 6143       *
 6144       * For more information on Chrome extension sandboxes see:
 6145:      * http://developer.chrome.com/stable/extensions/sandboxingEval.html
 6146       *
 6147       * @static
 ....
 6299  
 6300        // Use a sourceURL for easier debugging.
 6301:       // http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl
 6302        var sourceURL = '\n/*\n//# sourceURL=' + (options.sourceURL || '/lodash/template/source[' + (templateCounter++) + ']') + '\n*/';
 6303  

/Users/alexleitch/Documents/Heist/scout-dev/bower_components/lodash/dist/lodash.underscore.js:
 4455     * whitespace, and correctly escapes quotes within interpolated code.
 4456     *
 4457:    * Note: In the development build, `_.template` utilizes sourceURLs for easier
 4458:    * debugging. See http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl
 4459     *
 4460     * For more information on precompiling templates see:
 ....
 4462     *
 4463     * For more information on Chrome extension sandboxes see:
 4464:    * http://developer.chrome.com/stable/extensions/sandboxingEval.html
 4465     *
 4466     * @static

/Users/alexleitch/Documents/Heist/scout-dev/bower_components/socket.io-client/socket.io.js:
 2044      clearTimeout(this.pingTimeoutTimer);
 2045  
 2046:     // clean buffers in next tick, so developers can still
 2047      // grab the buffers on `close` event
 2048      setTimeout(function() {
 ....
 3456      (window.console && (console.firebug || (console.exception && console.table))) ||
 3457      // is firefox >= v31?
 3458:     // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages
 3459      (navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) && parseInt(RegExp.$1, 10) >= 31);
 3460  }

/Users/alexleitch/Documents/Heist/scout-dev/Field Guide - socket 0.9/FieldGuide.xcodeproj/project.pbxproj:
  277  					D751470319F80AC000D6BE68 = {
  278  						CreatedOnToolsVersion = 6.1;
  279: 						DevelopmentTeam = 7R4BD67EF4;
  280  					};
  281  					D751471F19F80AC000D6BE68 = {
  282  						CreatedOnToolsVersion = 6.1;
  283: 						DevelopmentTeam = 7R4BD67EF4;
  284  						TestTargetID = D751470319F80AC000D6BE68;
  285  					};
  ...
  288  			buildConfigurationList = D75146FF19F80ABF00D6BE68 /* Build configuration list for PBXProject "FieldGuide" */;
  289  			compatibilityVersion = "Xcode 3.2";
  290: 			developmentRegion = English;
  291  			hasScannedForEncodings = 0;
  292  			knownRegions = (
  ...
  404  				CLANG_WARN_UNREACHABLE_CODE = YES;
  405  				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
  406: 				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "iPhone Developer";
  407  				COPY_PHASE_STRIP = NO;
  408  				ENABLE_STRICT_OBJC_MSGSEND = YES;
  ...
  446  				CLANG_WARN_UNREACHABLE_CODE = YES;
  447  				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
  448: 				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "iPhone Developer";
  449  				COPY_PHASE_STRIP = YES;
  450  				ENABLE_NS_ASSERTIONS = NO;
  ...
  470  				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
  471  				ASSETCATALOG_COMPILER_LAUNCHIMAGE_NAME = LaunchImage;
  472: 				CODE_SIGN_IDENTITY = "iPhone Developer";
  473: 				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "iPhone Developer";
  474  				INFOPLIST_FILE = FieldGuide/Info.plist;
  475  				IPHONEOS_DEPLOYMENT_TARGET = 7.0;
  ...
  485  				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
  486  				ASSETCATALOG_COMPILER_LAUNCHIMAGE_NAME = LaunchImage;
  487: 				CODE_SIGN_IDENTITY = "iPhone Developer";
  488: 				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "iPhone Developer";
  489  				INFOPLIST_FILE = FieldGuide/Info.plist;
  490  				IPHONEOS_DEPLOYMENT_TARGET = 7.0;
  ...
  500  				BUNDLE_LOADER = "$(TEST_HOST)";
  501  				FRAMEWORK_SEARCH_PATHS = (
  502: 					"$(SDKROOT)/Developer/Library/Frameworks",
  503  					"$(inherited)",
  504  				);
  ...
  519  				BUNDLE_LOADER = "$(TEST_HOST)";
  520  				FRAMEWORK_SEARCH_PATHS = (
  521: 					"$(SDKROOT)/Developer/Library/Frameworks",
  522  					"$(inherited)",
  523  				);

/Users/alexleitch/Documents/Heist/scout-dev/Field Guide - socket 0.9/FieldGuide/Info.plist:
    3  <plist version="1.0">
    4  <dict>
    5: 	<key>CFBundleDevelopmentRegion</key>
    6  	<string>en</string>
    7  	<key>CFBundleExecutable</key>

/Users/alexleitch/Documents/Heist/scout-dev/Field Guide - socket 0.9/FieldGuideTests/Info.plist:
    3  <plist version="1.0">
    4  <dict>
    5: 	<key>CFBundleDevelopmentRegion</key>
    6  	<string>en</string>
    7  	<key>CFBundleExecutable</key>

/Users/alexleitch/Documents/Heist/scout-dev/node_modules/async/component.json:
    6    "keywords": [],
    7    "dependencies": {},
    8:   "development": {},
    9    "main": "lib/async.js",
   10    "scripts": [ "lib/async.js" ]

/Users/alexleitch/Documents/Heist/scout-dev/node_modules/async/README.md:
   86      npm install async
   87  
   88: __Development:__ [async.js](https://github.com/caolan/async/raw/master/lib/async.js) - 29.6kb Uncompressed
   89  
   90  ## In the Browser

/Users/alexleitch/Documents/Heist/scout-dev/node_modules/bcrypt-nodejs/.npmignore:
  144  var
  145  sdist
  146: develop-eggs
  147  .installed.cfg
  148  
  ...
  157  *.mo
  158  
  159: #Mr Developer
  160: .mr.developer.cfg
  161  
  162  # Mac crap

/Users/alexleitch/Documents/Heist/scout-dev/node_modules/bluebird/js/browser/bluebird.js:
 1816      typeof process.env === "object" &&
 1817      (process.env["BLUEBIRD_DEBUG"] ||
 1818:         process.env["NODE_ENV"] === "development")
 1819  );
 1820  function Promise(resolver) {

/Users/alexleitch/Documents/Heist/scout-dev/node_modules/bluebird/js/main/promise.js:
   42      typeof process.env === "object" &&
   43      (process.env["BLUEBIRD_DEBUG"] ||
   44:         process.env["NODE_ENV"] === "development")
   45  );
   46  function Promise(resolver) {

/Users/alexleitch/Documents/Heist/scout-dev/node_modules/bluebird/js/zalgo/promise.js:
   42      typeof process.env === "object" &&
   43      (process.env["BLUEBIRD_DEBUG"] ||
   44:         process.env["NODE_ENV"] === "development")
   45  );
   46  function Promise(resolver) {

/Users/alexleitch/Documents/Heist/scout-dev/node_modules/bluebird/README.md:
   21  - [Questions and issues](#questions-and-issues)
   22  - [Error handling](#error-handling)
   23: - [Development](#development)
   24      - [Testing](#testing)
   25      - [Benchmarking](#benchmarks)
   ..
  435  <hr>
  436  
  437: #Development
  438  
  439: For development tasks such as running benchmarks or testing, you need to clone the repository and install dev-dependencies.
  440  
  441  Install [node](http://nodejs.org/) and [npm](https://npmjs.org/)

/Users/alexleitch/Documents/Heist/scout-dev/node_modules/body-parser/node_modules/raw-body/index.js:
   58        var err = makeError('stream encoding should not be set',
   59          'stream.encoding.set')
   60:       // developer error
   61        err.status = err.statusCode = 500
   62        done(err)

/Users/alexleitch/Documents/Heist/scout-dev/node_modules/body-parser/node_modules/type-is/node_modules/mime/types/node.types:
   18  # What: HTML5 application cache manifes ('.manifest' extension)
   19  # Why: De-facto standard. Required by Mozilla browser when serving HTML5 apps
   20: # per https://developer.mozilla.org/en/offline_resources_in_firefox
   21  # Added by: louisremi
   22  text/cache-manifest  manifest
   ..
   45  
   46  # What: Mozilla App manifest mime type
   47: # Why: https://developer.mozilla.org/en/Apps/Manifest#Serving_manifests
   48  # Added by: ednapiranha
   49  application/x-web-app-manifest+json   webapp
   ..
   66  
   67  # What: DASH Adaptive Streaming manifest
   68: # Why: https://developer.mozilla.org/en-US/docs/DASH_Adaptive_Streaming_for_HTML_5_Video
   69  # Added by: eelcocramer
   70  application/dash+xml mdp

/Users/alexleitch/Documents/Heist/scout-dev/node_modules/connect-mongo/node_modules/debug/browser.js:
   51      (window.console && (console.firebug || (console.exception && console.table))) ||
   52      // is firefox >= v31?
   53:     // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages
   54      (navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) && parseInt(RegExp.$1, 10) >= 31);
   55  }

/Users/alexleitch/Documents/Heist/scout-dev/node_modules/connect-mongo/node_modules/debug/Readme.md:
   64  ## Millisecond diff
   65  
   66:   When actively developing an application it can be useful to see when the time spent between one `debug()` call and the next. Suppose for example you invoke `debug()` before requesting a resource, and after as well, the "+NNNms" will show you how much time was spent between calls.
   67  
   68    ![](http://f.cl.ly/items/2i3h1d3t121M2Z1A3Q0N/Screenshot.png)
   ..
   74  ## Conventions
   75  
   76:  If you're using this in one or more of your libraries, you _should_ use the name of your library so that developers may toggle debugging as desired without guessing names. If you have more than one debuggers you _should_ prefix them with your library name and use ":" to separate features. For example "bodyParser" from Connect would then be "connect:bodyParser".
   77  
   78  ## Wildcards
   ..
  103    Colors are also enabled on "Web Inspectors" that understand the `%c` formatting
  104    option. These are WebKit web inspectors, Firefox ([since version
  105:   31](https://hacks.mozilla.org/2014/05/editable-box-model-multiple-selection-sublime-text-keys-much-more-firefox-developer-tools-episode-31/))
  106    and the Firebug plugin for Firefox (any version).
  107  

/Users/alexleitch/Documents/Heist/scout-dev/node_modules/connect-mongo/node_modules/mongodb/node_modules/bson/.travis.yml:
    1  language: node_js
    2  node_js:
    3:   - 0.10 # development version of 0.8, may be unstable
    4    - 0.11

/Users/alexleitch/Documents/Heist/scout-dev/node_modules/connect-mongo/node_modules/mongodb/node_modules/bson/node_modules/nan/README.md:
    2  ===============================
    3  
    4: **A header file filled with macro and utility goodness for making add-on development for Node.js easier across versions 0.8, 0.10 and 0.11, and eventually 0.12.**
    5  
    6  ***Current version: 1.5.0***
    .
   13  [![Build status](https://ci.appveyor.com/api/projects/status/kh73pbm9dsju7fgh)](https://ci.appveyor.com/project/RodVagg/nan)
   14  
   15: Thanks to the crazy changes in V8 (and some in Node core), keeping native addons compiling happily across versions, particularly 0.10 to 0.11/0.12, is a minor nightmare. The goal of this project is to store all logic necessary to develop native Node.js addons without having to inspect `NODE_MODULE_VERSION` and get yourself into a macro-tangle.
   16  
   17: This project also contains some helper utilities that make addon development a bit more pleasant.
   18  
   19   * **[News & Updates](#news)**

/Users/alexleitch/Documents/Heist/scout-dev/node_modules/connect-mongo/node_modules/mongodb/node_modules/bson/tools/jasmine-1.1.0/jasmine.js:
  477   * Creates a <em>disabled</em> Jasmine spec.
  478   *
  479:  * A convenience method that allows existing specs to be disabled temporarily during development.
  480   *
  481   * @param {String} desc description of this specification
  ...
  578  
  579  /**
  580:  * Disables a suite of specifications.  Used to disable some suites in a file, or files, temporarily during development.
  581   *
  582   * @param {String} description A string, usually the class under test.

/Users/alexleitch/Documents/Heist/scout-dev/node_modules/connect-mongo/node_modules/mongodb/node_modules/kerberos/node_modules/nan/README.md:
    2  ===============================
    3  
    4: **A header file filled with macro and utility goodness for making add-on development for Node.js easier across versions 0.8, 0.10 and 0.11, and eventually 0.12.**
    5  
    6  ***Current version: 1.5.0***
    .
   13  [![Build status](https://ci.appveyor.com/api/projects/status/kh73pbm9dsju7fgh)](https://ci.appveyor.com/project/RodVagg/nan)
   14  
   15: Thanks to the crazy changes in V8 (and some in Node core), keeping native addons compiling happily across versions, particularly 0.10 to 0.11/0.12, is a minor nightmare. The goal of this project is to store all logic necessary to develop native Node.js addons without having to inspect `NODE_MODULE_VERSION` and get yourself into a macro-tangle.
   16  
   17: This project also contains some helper utilities that make addon development a bit more pleasant.
   18  
   19   * **[News & Updates](#news)**

/Users/alexleitch/Documents/Heist/scout-dev/node_modules/connect-mongo/node_modules/mongodb/node_modules/readable-stream/README.md:
   10  If you want to guarantee a stable streams base, regardless of what version of Node you, or the users of your libraries are using, use **readable-stream** *only* and avoid the *"stream"* module in Node-core.
   11  
   12: **readable-stream** comes in two major versions, v1.0.x and v1.1.x. The former tracks the Streams2 implementation in Node 0.10, including bug-fixes and minor improvements as they are added. The latter tracks Streams3 as it develops in Node 0.11; we will likely see a v1.2.x branch for Node 0.12.
   13  
   14  **readable-stream** uses proper patch-level versioning so if you pin to `"~1.0.0"` you’ll get the latest Node 0.10 Streams2 implementation, including any fixes and minor non-breaking improvements. The patch-level versions of 1.0.x and 1.1.x should mirror the patch-level versions of Node-core releases. You should prefer the **1.0.x** releases for now and when you’re ready to start using Streams3, pin to `"~1.1.0"`

/Users/alexleitch/Documents/Heist/scout-dev/node_modules/connect-mongo/node_modules/mongodb/Readme.md:
   39      npm install mongodb
   40  
   41: That may give you a warning telling you that bugs['web'] should be bugs['url'], it would be safe to ignore it (this has been fixed in the development version)
   42  
   43  To install the latest from the repository, run::

/Users/alexleitch/Documents/Heist/scout-dev/node_modules/connect-mongostore/node_modules/mongodb/node_modules/bson/.travis.yml:
    1  language: node_js
    2  node_js:
    3:   - 0.10 # development version of 0.8, may be unstable
    4    - 0.11

/Users/alexleitch/Documents/Heist/scout-dev/node_modules/connect-mongostore/node_modules/mongodb/node_modules/bson/node_modules/nan/README.md:
    2  ===============================
    3  
    4: **A header file filled with macro and utility goodness for making add-on development for Node.js easier across versions 0.8, 0.10 and 0.11, and eventually 0.12.**
    5  
    6  ***Current version: 1.5.0***
    .
   13  [![Build status](https://ci.appveyor.com/api/projects/status/kh73pbm9dsju7fgh)](https://ci.appveyor.com/project/RodVagg/nan)
   14  
   15: Thanks to the crazy changes in V8 (and some in Node core), keeping native addons compiling happily across versions, particularly 0.10 to 0.11/0.12, is a minor nightmare. The goal of this project is to store all logic necessary to develop native Node.js addons without having to inspect `NODE_MODULE_VERSION` and get yourself into a macro-tangle.
   16  
   17: This project also contains some helper utilities that make addon development a bit more pleasant.
   18  
   19   * **[News & Updates](#news)**

/Users/alexleitch/Documents/Heist/scout-dev/node_modules/connect-mongostore/node_modules/mongodb/node_modules/bson/tools/jasmine-1.1.0/jasmine.js:
  477   * Creates a <em>disabled</em> Jasmine spec.
  478   *
  479:  * A convenience method that allows existing specs to be disabled temporarily during development.
  480   *
  481   * @param {String} desc description of this specification
  ...
  578  
  579  /**
  580:  * Disables a suite of specifications.  Used to disable some suites in a file, or files, temporarily during development.
  581   *
  582   * @param {String} description A string, usually the class under test.

/Users/alexleitch/Documents/Heist/scout-dev/node_modules/connect-mongostore/node_modules/mongodb/node_modules/kerberos/node_modules/nan/README.md:
    2  ===============================
    3  
    4: **A header file filled with macro and utility goodness for making add-on development for Node.js easier across versions 0.8, 0.10 and 0.11, and eventually 0.12.**
    5  
    6  ***Current version: 1.5.0***
    .
   13  [![Build status](https://ci.appveyor.com/api/projects/status/kh73pbm9dsju7fgh)](https://ci.appveyor.com/project/RodVagg/nan)
   14  
   15: Thanks to the crazy changes in V8 (and some in Node core), keeping native addons compiling happily across versions, particularly 0.10 to 0.11/0.12, is a minor nightmare. The goal of this project is to store all logic necessary to develop native Node.js addons without having to inspect `NODE_MODULE_VERSION` and get yourself into a macro-tangle.
   16  
   17: This project also contains some helper utilities that make addon development a bit more pleasant.
   18  
   19   * **[News & Updates](#news)**

/Users/alexleitch/Documents/Heist/scout-dev/node_modules/connect-mongostore/node_modules/mongodb/node_modules/readable-stream/README.md:
   10  If you want to guarantee a stable streams base, regardless of what version of Node you, or the users of your libraries are using, use **readable-stream** *only* and avoid the *"stream"* module in Node-core.
   11  
   12: **readable-stream** comes in two major versions, v1.0.x and v1.1.x. The former tracks the Streams2 implementation in Node 0.10, including bug-fixes and minor improvements as they are added. The latter tracks Streams3 as it develops in Node 0.11; we will likely see a v1.2.x branch for Node 0.12.
   13  
   14  **readable-stream** uses proper patch-level versioning so if you pin to `"~1.0.0"` you’ll get the latest Node 0.10 Streams2 implementation, including any fixes and minor non-breaking improvements. The patch-level versions of 1.0.x and 1.1.x should mirror the patch-level versions of Node-core releases. You should prefer the **1.0.x** releases for now and when you’re ready to start using Streams3, pin to `"~1.1.0"`

/Users/alexleitch/Documents/Heist/scout-dev/node_modules/connect-mongostore/node_modules/mongodb/Readme.md:
   39      npm install mongodb
   40  
   41: That may give you a warning telling you that bugs['web'] should be bugs['url'], it would be safe to ignore it (this has been fixed in the development version)
   42  
   43  To install the latest from the repository, run::

/Users/alexleitch/Documents/Heist/scout-dev/node_modules/debug/browser.js:
   51      (window.console && (console.firebug || (console.exception && console.table))) ||
   52      // is firefox >= v31?
   53:     // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages
   54      (navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) && parseInt(RegExp.$1, 10) >= 31);
   55  }

/Users/alexleitch/Documents/Heist/scout-dev/node_modules/debug/Readme.md:
   64  ## Millisecond diff
   65  
   66:   When actively developing an application it can be useful to see when the time spent between one `debug()` call and the next. Suppose for example you invoke `debug()` before requesting a resource, and after as well, the "+NNNms" will show you how much time was spent between calls.
   67  
   68    ![](http://f.cl.ly/items/2i3h1d3t121M2Z1A3Q0N/Screenshot.png)
   ..
   74  ## Conventions
   75  
   76:  If you're using this in one or more of your libraries, you _should_ use the name of your library so that developers may toggle debugging as desired without guessing names. If you have more than one debuggers you _should_ prefix them with your library name and use ":" to separate features. For example "bodyParser" from Connect would then be "connect:bodyParser".
   77  
   78  ## Wildcards
   ..
  103    Colors are also enabled on "Web Inspectors" that understand the `%c` formatting
  104    option. These are WebKit web inspectors, Firefox ([since version
  105:   31](https://hacks.mozilla.org/2014/05/editable-box-model-multiple-selection-sublime-text-keys-much-more-firefox-developer-tools-episode-31/))
  106    and the Firebug plugin for Firefox (any version).
  107  

/Users/alexleitch/Documents/Heist/scout-dev/node_modules/del/node_modules/each-async/node_modules/set-immediate-shim/readme.md:
    1  # set-immediate-shim [![Build Status](https://travis-ci.org/sindresorhus/set-immediate-shim.svg?branch=master)](https://travis-ci.org/sindresorhus/set-immediate-shim)
    2  
    3: > Simple [`setImmediate`](https://developer.mozilla.org/en-US/docs/Web/API/Window.setImmediate) shim
    4  
    5  

/Users/alexleitch/Documents/Heist/scout-dev/node_modules/del/node_modules/globby/node_modules/array-union/node_modules/array-uniq/readme.md:
    3  > Create an array without duplicates
    4  
    5: It's already pretty fast, but will be much faster when [Set](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set) becomes available in V8 (especially with large arrays).
    6  
    7  

/Users/alexleitch/Documents/Heist/scout-dev/node_modules/express-session/node_modules/debug/Readme.md:
   54  ## Millisecond diff
   55  
   56:   When actively developing an application it can be useful to see when the time spent between one `debug()` call and the next. Suppose for example you invoke `debug()` before requesting a resource, and after as well, the "+NNNms" will show you how much time was spent between calls.
   57  
   58    ![](http://f.cl.ly/items/2i3h1d3t121M2Z1A3Q0N/Screenshot.png)
   ..
   64  ## Conventions
   65  
   66:  If you're using this in one or more of your libraries, you _should_ use the name of your library so that developers may toggle debugging as desired without guessing names. If you have more than one debuggers you _should_ prefix them with your library name and use ":" to separate features. For example "bodyParser" from Connect would then be "connect:bodyParser".
   67  
   68  ## Wildcards

/Users/alexleitch/Documents/Heist/scout-dev/node_modules/express-session/README.md:
   36  
   37  Please note that `secure: true` is a **recommended** option. However, it requires an https-enabled website, i.e., HTTPS is necessary for secure cookies.
   38: If for development or other reasons security is not a concern, just use:
   39  
   40  ```

/Users/alexleitch/Documents/Heist/scout-dev/node_modules/express-static/node_modules/mime/types/node.types:
   18  # What: HTML5 application cache manifes ('.manifest' extension)
   19  # Why: De-facto standard. Required by Mozilla browser when serving HTML5 apps
   20: # per https://developer.mozilla.org/en/offline_resources_in_firefox
   21  # Added by: louisremi
   22  text/cache-manifest  manifest
   ..
   45  
   46  # What: Mozilla App manifest mime type
   47: # Why: https://developer.mozilla.org/en/Apps/Manifest#Serving_manifests
   48  # Added by: ednapiranha
   49  application/x-web-app-manifest+json   webapp
   ..
   66  
   67  # What: DASH Adaptive Streaming manifest
   68: # Why: https://developer.mozilla.org/en-US/docs/DASH_Adaptive_Streaming_for_HTML_5_Video
   69  # Added by: eelcocramer
   70  application/dash+xml mdp

/Users/alexleitch/Documents/Heist/scout-dev/node_modules/express.io/node_modules/.bin/express:
  229    , 'app.use(express.static(path.join(__dirname, \'public\')));'
  230    , ''
  231:   , '// development only'
  232:   , 'if (\'development\' == app.get(\'env\')) {'
  233    , '  app.use(express.errorHandler());'
  234    , '}'

/Users/alexleitch/Documents/Heist/scout-dev/node_modules/express.io/node_modules/async/README.md:
   47  
   48  
   49: __Development:__ [async.js](https://github.com/caolan/async/raw/master/lib/async.js) - 17.5kb Uncompressed
   50  
   51  __Production:__ [async.min.js](https://github.com/caolan/async/raw/master/dist/async.min.js) - 1.7kb Packed and Gzipped

/Users/alexleitch/Documents/Heist/scout-dev/node_modules/express.io/node_modules/express/bin/express:
  229    , 'app.use(express.static(path.join(__dirname, \'public\')));'
  230    , ''
  231:   , '// development only'
  232:   , 'if (\'development\' == app.get(\'env\')) {'
  233    , '  app.use(express.errorHandler());'
  234    , '}'

/Users/alexleitch/Documents/Heist/scout-dev/node_modules/express.io/node_modules/express/History.md:
    9     - `req.accepts*` -> `req.accepts*s` - i.e. `req.acceptsEncoding` -> `req.acceptsEncodings`
   10     - `req.params` is now an object instead of an array
   11:    - `json spaces` no longer enabled by default in development
   12   * refactor:
   13     - `req.accepts*` with [accepts](https://github.com/expressjs/accepts)
   ..
  637    * Fixed redis session example
  638    * Fixed markdown example
  639:   * Fixed view caching, should not be enabled in development
  640  
  641  2.3.5 / 2011-05-20
  ...
  771    * Added charset option for `res.render()`
  772    * Added `.charset` support (via connect 1.0.4)
  773:   * Added view resolution hints when in development and a lookup fails
  774    * Added layout lookup support relative to the page view.
  775      For example while rendering `./views/user/index.jade` if you create
  ...
  906    * Added basic Range support to `res.sendfile()` (and `res.download()` etc)
  907    * Changed; `express(1)` generated app using 2 spaces instead of 4
  908:   * Default env to "development" again [aheckmann]
  909    * Removed _context_ option is no more, use "scope"
  910    * Fixed; exposing _./support_ libs to examples so they can run without installs
  ...
  956  
  957    * Removed "reload views" setting and support code
  958:     development env never caches, production always caches.
  959  
  960    * Removed _param_ in route callbacks, signature is now

/Users/alexleitch/Documents/Heist/scout-dev/node_modules/express.io/node_modules/express/lib/application.js:
   46    this.enable('x-powered-by');
   47    this.enable('etag');
   48:   this.set('env', process.env.NODE_ENV || 'development');
   49    this.set('subdomain offset', 2);
   50    debug('booting in %s mode', this.get('env'));
   ..
   83    this.set('jsonp callback name', 'callback');
   84  
   85:   this.configure('development', function(){
   86      this.set('json spaces', 2);
   87    });
   ..
  364   *  are effectively sugar for the following:
  365   *
  366:  *     var env = process.env.NODE_ENV || 'development';
  367   *
  368   *      switch (env) {
  369:  *        case 'development':
  370   *          ...
  371   *          break;

/Users/alexleitch/Documents/Heist/scout-dev/node_modules/express.io/node_modules/express/node_modules/connect/lib/middleware/errorHandler.js:
   15  // environment
   16  
   17: var env = process.env.NODE_ENV || 'development';
   18  
   19  /**
   20   * Error handler:
   21   *
   22:  * Development error handler, providing stack traces
   23   * and error message responses for requests accepting text, html,
   24   * or json.

/Users/alexleitch/Documents/Heist/scout-dev/node_modules/express.io/node_modules/express/node_modules/connect/lib/middleware/logger.js:
   57   *    - `short` ':remote-addr - :method :url HTTP/:http-version :status :res[content-length] - :response-time ms'
   58   *    - `tiny`  ':method :url :status :res[content-length] - :response-time ms'
   59:  *    - `dev` concise output colored by response status for development use
   60   *
   61   * Examples:

/Users/alexleitch/Documents/Heist/scout-dev/node_modules/express.io/node_modules/express/node_modules/connect/lib/proto.js:
   20  // environment
   21  
   22: var env = process.env.NODE_ENV || 'development';
   23  
   24  /**

/Users/alexleitch/Documents/Heist/scout-dev/node_modules/express.io/node_modules/express/node_modules/connect/node_modules/batch/component.json:
    8      "component/emitter": "*"
    9    },
   10:   "development": {},
   11    "scripts": [
   12      "index.js"

/Users/alexleitch/Documents/Heist/scout-dev/node_modules/express.io/node_modules/express/node_modules/connect/node_modules/multiparty/.jshintrc:
   23      ],
   24  
   25:     // Development.
   26      "debug"         : true,   // Allow debugger statements e.g. browser breakpoints.
   27:     "devel"         : true,   // Allow development statements e.g. `console.log();`.
   28  
   29  

/Users/alexleitch/Documents/Heist/scout-dev/node_modules/express.io/node_modules/express/node_modules/connect/node_modules/multiparty/CHANGELOG.md:
  152  * Add support for multipart boundaries that are quoted strings. (Jeff Craig)
  153  
  154: This marks the beginning of development on version 2.0 which will include
  155  several architectural improvements.
  156  

/Users/alexleitch/Documents/Heist/scout-dev/node_modules/express.io/node_modules/express/node_modules/connect/node_modules/multiparty/node_modules/readable-stream/README.md:
   10  If you want to guarantee a stable streams base, regardless of what version of Node you, or the users of your libraries are using, use **readable-stream** *only* and avoid the *"stream"* module in Node-core.
   11  
   12: **readable-stream** comes in two major versions, v1.0.x and v1.1.x. The former tracks the Streams2 implementation in Node 0.10, including bug-fixes and minor improvements as they are added. The latter tracks Streams3 as it develops in Node 0.11; we will likely see a v1.2.x branch for Node 0.12.
   13  
   14  **readable-stream** uses proper patch-level versioning so if you pin to `"~1.0.0"` you’ll get the latest Node 0.10 Streams2 implementation, including any fixes and minor non-breaking improvements. The patch-level versions of 1.0.x and 1.1.x should mirror the patch-level versions of Node-core releases. You should prefer the **1.0.x** releases for now and when you’re ready to start using Streams3, pin to `"~1.1.0"`

/Users/alexleitch/Documents/Heist/scout-dev/node_modules/express.io/node_modules/express/node_modules/connect/node_modules/raw-body/index.js:
   48        var err = makeError('stream encoding should not be set',
   49          'stream.encoding.set')
   50:       // developer error
   51        err.status = err.statusCode = 500
   52        done(err)

/Users/alexleitch/Documents/Heist/scout-dev/node_modules/express.io/node_modules/express/node_modules/debug/Readme.md:
   54  ## Millisecond diff
   55  
   56:   When actively developing an application it can be useful to see when the time spent between one `debug()` call and the next. Suppose for example you invoke `debug()` before requesting a resource, and after as well, the "+NNNms" will show you how much time was spent between calls.
   57  
   58    ![](http://f.cl.ly/items/2i3h1d3t121M2Z1A3Q0N/Screenshot.png)
   ..
   64  ## Conventions
   65  
   66:  If you're using this in one or more of your libraries, you _should_ use the name of your library so that developers may toggle debugging as desired without guessing names. If you have more than one debuggers you _should_ prefix them with your library name and use ":" to separate features. For example "bodyParser" from Connect would then be "connect:bodyParser".
   67  
   68  ## Wildcards

/Users/alexleitch/Documents/Heist/scout-dev/node_modules/express.io/node_modules/express/node_modules/send/node_modules/mime/types/node.types:
   18  # What: HTML5 application cache manifes ('.manifest' extension)
   19  # Why: De-facto standard. Required by Mozilla browser when serving HTML5 apps
   20: # per https://developer.mozilla.org/en/offline_resources_in_firefox
   21  # Added by: louisremi
   22  text/cache-manifest  manifest
   ..
   45  
   46  # What: Mozilla App manifest mime type
   47: # Why: https://developer.mozilla.org/en/Apps/Manifest#Serving_manifests
   48  # Added by: ednapiranha
   49  application/x-web-app-manifest+json   webapp
   ..
   66  
   67  # What: DASH Adaptive Streaming manifest
   68: # Why: https://developer.mozilla.org/en-US/docs/DASH_Adaptive_Streaming_for_HTML_5_Video
   69  # Added by: eelcocramer
   70  application/dash+xml mdp

/Users/alexleitch/Documents/Heist/scout-dev/node_modules/express.io/node_modules/express/package.json:
    1  {
    2    "name": "express",
    3:   "description": "Sinatra inspired web development framework",
    4    "version": "3.4.8",
    5    "author": {

/Users/alexleitch/Documents/Heist/scout-dev/node_modules/express.io/node_modules/express/Readme.md:
   89  ## Running Tests
   90  
   91: To run the test suite, first invoke the following command within the repo, installing the development dependencies:
   92  
   93      $ npm install

/Users/alexleitch/Documents/Heist/scout-dev/node_modules/express.io/node_modules/underscore/index.html:
  375      <table>
  376        <tr>
  377:         <td><a href="underscore.js">Development Version (1.4.3)</a></td>
  378          <td><i>40kb, Uncompressed with Plentiful Comments</i></td>
  379        </tr>
  ...
 1650        <p>
 1651          In addition, the
 1652:         <a href="https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/prototype">Array prototype's methods</a>
 1653          are proxied through the chained Underscore object, so you can slip a
 1654          <tt>reverse</tt> or a <tt>push</tt> into your chain, and continue to
 ....
 2213          <b class="header">0.5.8</b><br />
 2214          Fixed Underscore's collection functions to work on
 2215:         <a href="https://developer.mozilla.org/En/DOM/NodeList">NodeLists</a> and
 2216:         <a href="https://developer.mozilla.org/En/DOM/HTMLCollection">HTMLCollections</a>
 2217          once more, thanks to
 2218          <a href="http://github.com/jmtulloss">Justin Tulloss</a>.

/Users/alexleitch/Documents/Heist/scout-dev/node_modules/express.io/test/express/lib/application.js:
   49    this.enable('x-powered-by');
   50    this.enable('etag');
   51:   this.set('env', process.env.NODE_ENV || 'development');
   52    debug('booting in %s mode', this.get('env'));
   53  
   ..
   83    this.set('jsonp callback name', 'callback');
   84  
   85:   this.configure('development', function(){
   86      this.set('json spaces', 2);
   87    });
   ..
  369   *  are effectively sugar for the following:
  370   *
  371:  *     var env = process.env.NODE_ENV || 'development';
  372   *
  373   *      switch (env) {
  374:  *        case 'development':
  375   *          ...
  376   *          break;



Searching 34 files for "Devel"

/Users/alexleitch/Documents/Heist/scout-dev/server/routes/test.js:
   56                      created_by_account: req.user._account,
   57                      created_by_user : req.user._id,
   58:                     name : "DeveloperTest",
   59                      desc : "- Pew\n"+
   60                             "- Rub face on everything.\n",

1 match in 1 file


Searching 181 files for "console.log"

/Users/alexleitch/Documents/Heist/scout-dev/public/js/app.js:
   27          // TODO: this should probably be an Interceptor, but it works on load for now.
   28          function checkLoggedin($q, $timeout, $http, $location, $rootScope){ 
   29:             console.log('checking logged in identity');
   30              // Make an AJAX call to check if the user is logged in
   31              var deferred = $q.defer();
   ..
   35                      // Authenticated
   36                      if (user !== '0') {
   37:                         console.log('user', user);
   38                          $rootScope.user = user;
   39                          deferred.resolve();
   ..
   41                      // Not Authenticated 
   42                      else { 
   43:                         console.log('welp, that flunked.');
   44                          $location.url('/login');
   45                          deferred.resolve();
   ..
   47                  })
   48                  .error(function(err){
   49:                     console.log(err);
   50                      $location.url('/login');
   51                      deferred.resolve();
   ..
  328  
  329                  scope.$watch(iAttrs.ngCheckStrength, function () {
  330:                     console.log('watching');
  331                      if (!scope.user) {
  332:                         console.log('no user');
  333                          iElement.css({ "display": "none"  });
  334                      } else {
  335:                         console.log(scope.user.password.length);
  336                          var c = strength.getColor(strength.measureStrength(scope.user.password));
  337                          iElement.css({ "display": "inline" });
  ...
  364                  .put(url, dataOut)
  365                  .success(function(data){
  366:                     console.log(data);
  367                  });
  368          };

/Users/alexleitch/Documents/Heist/scout-dev/public/js/controllers/account.js:
   13  		$scope.connector = {};
   14  		
   15: 		console.log('account user', $rootScope.user);
   16  		// https://trello.com/1/members/my/boards?key=substitutewithyourapplicationkey&token=substitutethispartwiththeauthorizationtokenthatyougotfromtheuser
   17  		// https://trello.com/docs/api/card/index.html#post-1-cards
   ..
   20  			.get('/api/account/'+ user_id)
   21  			.success(function(data){
   22: 				// console.log(data);
   23  				$scope.live_user = data;
   24  			});
   ..
   37                  .put(url, dataOut)
   38                  .success(function(data){
   39:                     console.log(data);
   40                      $location.path('/overview');
   41                  });
   ..
   57  			$scope.connector.message = "Your Trello account is connected.";
   58  			$scope.connector.toggle = 1;
   59: 			// // console.log('called back');
   60  			$scope.$apply();
   61  		};
   ..
   63  
   64  		// $scope.removeTeamMember = function(person){
   65: 		// 	// // console.log('remove this person', person._id );
   66  		// 	var index = $scope.live_user.team.indexOf(person);
   67  
   ..
   69  		// 		.delete('/api/account/'+person._id)
   70  		// 		.success(function(err, data){
   71: 		// 			// // console.log('deleted', data);
   72  		// 			$scope.live_user.team.splice(index, 1);
   73  		// 		});
   ..
   91  				.post(url, dataOut)
   92  				.success(function(invite){
   93: 					console.log('invitation sent', invite);
   94  
   95  					if(invite.user_email){
   ..
   98  
   99  						$scope.live_user.invites.push(invite);
  100: 						// console.log('$scope.live_user.invites', $scope.live_user.invites);
  101  						email.address = "";
  102  						$scope.message = "We&rsquo;ve sent an e-mail invitation to your team member."+
  ...
  128  			// this will resend a pending invitation for a non-existent user
  129  			// it requires that the previous invitation supply an invitation._id
  130: 			// console.log('sent', invite);
  131  			var url = '/api/invite/'+invite._id,
  132  				dataOut = invite,
  ...
  136  				.post(url, dataOut)
  137  				.success(function(data){
  138: 					// console.log('reinvitation sent', data);
  139  					$scope.message = "Reinvitation sent to "+ data.user_email +
  140  	                                 "<br /> Here is a personalized invitation link you can share with them: "+
  ...
  151  				.delete('/api/invite/'+invite._id)
  152  				.success(function(err, data){
  153: 					// console.log('invitation removed', data);
  154  					$scope.live_user.invites.splice(index, 1);
  155  				});
  ...
  161  				.get('/auth/export/account/')
  162  				.success(function(data){
  163: 					console.log('success', data);
  164  				});
  165  		};
  ...
  171  			$window.open('/connect/trello', 'Connect Field Guide to Trello', 'width=450, height=600');
  172  			$scope.$watch('inviteCallback', function(){
  173: 				// // console.log('hello callback!');
  174  				// $scope.connector = false;
  175  				// $scope.live_user.trello = true;
  ...
  178  
  179  		$scope.disconnectTrello = function() {
  180: 			// // console.log('touched disconnect');
  181  
  182  			$http.delete('/connect/trello')
  183  				.success(function(err, data){
  184: 					// // console.log('Trello disconnected');
  185  					$scope.live_user.trello=false;
  186  

/Users/alexleitch/Documents/Heist/scout-dev/public/js/controllers/forgot.js:
    7         .controller('forgot', ['$scope','$http', '$location', '$stateParams','$rootScope', 
    8                      function($scope, $http, $location, $stateParams, $rootScope){
    9:         console.log('password reset controller');    
   10  
   11          var url = '/reset'+$stateParams.token;
   12  
   13:         console.log(url);
   14          $http
   15              .get(url)
   16              .success(function(data){
   17:                 console.log(data);
   18              });
   19  
   ..
   25                  .success(function(data){
   26                      // do a login here, perhaps
   27:                     console.log('reset', data);
   28                      if(data.length > 0){
   29                          $scope.successMsg = data;

/Users/alexleitch/Documents/Heist/scout-dev/public/js/controllers/login.js:
   13              $scope.user = $rootScope.user;
   14          }
   15:         // console.log('$scope.login $rootScope.user', $rootScope.user);
   16  
   17          if($stateParams.acct){
   ..
   24                  .get('/auth/invite'+$stateParams.acct)
   25                  .success(function(data){
   26:                     console.log(data);
   27                      $scope.user = data;
   28                      $scope.user.email = data.user_email;
   ..
   40                  .post(url, dataOut)
   41                  .success(function(data){
   42:                     console.log('login controller success', data);
   43                      $scope.flashmessage = data.error;
   44                      $location.path('/');
   45                  })
   46                  .error(function(error){
   47:                     // console.log('login no bueno.', error);
   48                  });
   49          };
   ..
   51          $scope.showReg = function(){
   52              $scope.reg_toggle = true;
   53:             console.log('touched register', $scope.reg_toggle);
   54  
   55          };
   ..
   60  
   61          $scope.showLogin = function(){
   62:             // console.log('touched login', $scope.reg_toggle);
   63              $scope.reg_toggle = false;
   64          };
   65  
   66          $scope.register = function(user){
   67:             console.log('register this user', user);
   68              var url, 
   69                  dataOut,
   ..
   72              if($stateParams.acct){
   73                  invite = $stateParams.acct.replace( /\//gi,"");
   74:                 // console.log('touched account', acct);
   75                  url = '/auth/signup/';
   76                  dataOut = {email: user.email, name:user.name, password: user.password, invite: invite};
   77              } else if (!$stateParams.acct) {
   78:                 // console.log('this signup does not include an account (stateparams.acct)');
   79                  url = '/auth/signup/';
   80                  dataOut = {email: user.email, name:user.name, password:  user.password};
   ..
   85                  .success(function(data){
   86                      $scope.flashmessage = data.error;
   87:                     // console.log('register controller success passed back this', data);
   88                      
   89                      $rootScope.user = data._id;
   ..
   94                  })
   95                  .error(function(error){
   96:                     // console.log('signup no bueno.', error);
   97              });
   98          };
   ..
  104                  .post(url)
  105                  .success(function(data){
  106:                     // console.log('Success! Logged out.', data);
  107                      $location.path(data.redirect);
  108                      $rootScope.user = '';
  109                  })
  110                  .error(function(error){
  111:                     // console.log('logout no bueno.', error);
  112              });
  113          };

/Users/alexleitch/Documents/Heist/scout-dev/public/js/controllers/overview.js:
   12              .success(function(data) {
   13                  $scope.tests = data;
   14:                 console.log('tests', data);
   15                  // initially selected 
   16                  // $scope.selected = data[0];
   ..
   30              })
   31              .error(function(data) {
   32:                 console.log('Error: ' + data);
   33              });
   34          // ONBOARDING =========================================
   ..
   41          // Tests do not have actual permit locks on them now, do they.
   42          // else just continue as normal.
   43:         console.log('onboard', $rootScope.user.onboard);
   44  
   45          $scope.changeOnboard = function(num){
   ..
   52                  .put(url, dataOut)
   53                  .success(function(data){
   54:                     console.log(data);
   55                      if($rootScope.user.onboard === 3){
   56                          $location.path('/run/'+$scope.tests[0]._id);
   ..
   61  
   62          $scope.select = function (session){
   63:             console.log('touched session', session);
   64              $scope.selected = session;
   65          };
   ..
   86              $http.put(url, data_out)
   87                      .success(function(data){
   88:                         console.log('sent new title : ', data);
   89                      })
   90                      .error(function(data){
   91:                         console.log('Error: ' + data);
   92                      });
   93          };
   ..
   98                  .success(function(data){
   99  
  100:                     console.log('added a new session '+ JSON.stringify(data));
  101                      
  102                      $scope.sessions.push(data);
  ...
  106                  })
  107                  .error(function(data){
  108:                     console.log('error', data);
  109                  });   
  110          };
  ...
  116              $http.delete(url)
  117                  .success(function(data){
  118:                     console.log(data);
  119  
  120                      $scope.sessions.splice(index, 1);
  ...
  122                  })
  123                  .error(function(data){
  124:                     console.log('error', data);
  125                  });
  126          };
  ...
  128          // TEST ROUTES ========================================
  129          $scope.devTest = function(){
  130:             console.log('get me some tests');
  131              
  132              $http.post('/api/test/dev_tests/')
  ...
  137  
  138          $scope.newTest = function(){
  139:                 console.log('touched addatest');
  140                  
  141                  var test = {};
  142  
  143                  if($rootScope.user){
  144:                     console.log('rootScope user set', $rootScope.user);
  145                      test.created_by = $rootScope.user;
  146                     
  ...
  149  
  150                  }else{
  151:                     console.log('whoops, needs a checkin');
  152                  }
  153  
  ...
  158                      .post(url, data_out)
  159                      .success(function(data){
  160:                         console.log('new test added '+ JSON.stringify(data));
  161                          $location.path('/edit/test/'+ data._id);
  162                          $scope.tests.push(data);
  163                      })
  164                      .error(function(data){
  165:                         console.log('error', data);
  166                      });
  167              };
  ...
  178                      .delete(url)
  179                      .success(function(data){
  180:                         console.log(data);
  181                      })
  182                      .error(function(data){
  183:                         console.log('Error: ' + data);
  184                      });
  185              // }        
  ...
  187  
  188          $scope.dupeTest = function(test){
  189:             console.log('touched dupe test', test._id);
  190  
  191              var url = '/api/test/'+test._id;
  ...
  195                  .post(url, data_out)
  196                  .success(function(data){
  197:                     console.log('new test added '+ JSON.stringify(data));
  198                      $scope.tests.push(data);
  199                  })
  200                  .error(function(data){
  201:                     console.log('error', data);
  202                  });
  203          };
  204  
  205          $scope.editTest = function(test){
  206:             console.log('touched test', test);
  207              $location.path('/edit/test/'+ test._id);
  208          };
  209  
  210          $scope.watchTest = function(test){
  211:             console.log('touched watch', test);
  212              $location.path('/watch/'+test._id);
  213          };
  214           
  215          $scope.runTest = function(test){
  216:             console.log('touched run', test._id);
  217              $location.path('/run/'+test._id);
  218              mixpanel.track('Run test', { 'user': $rootScope.user });
  ...
  220  
  221          $scope.summarizeTest = function(test_id){
  222:             console.log('touched summary', test_id);
  223              $location.path('/summary/'+ test_id);
  224              mixpanel.track('Summary clicked', {});
  ...
  226  
  227          $scope.loadReport = function(test_id){
  228:             console.log('touched a report', test_id);
  229              $location.path('/report/'+ test_id);
  230          };

/Users/alexleitch/Documents/Heist/scout-dev/public/js/controllers/register.js:
   11          if($stateParams.acct){
   12              $scope.acct = $stateParams.acct.replace( /\//gi,"");
   13:             console.log($scope.acct);
   14          }
   15  

/Users/alexleitch/Documents/Heist/scout-dev/public/js/controllers/reportPrivate.js:
   16      $http.get('/api/private/report/'+$stateParams.test_id)
   17              .success(function(data){
   18:                 console.log('the report object', data);
   19                  
   20                  $scope.leftNavList = [];
   ..
   27                  _.each(sort, function(obj){
   28                      if(obj.visible){
   29:                         console.log(obj.name); 
   30                          $scope.leftNavList.push(obj);
   31                      }
   ..
   34                  $scope.messages = data.messages;
   35  
   36:                 console.log($scope.leftNavList[0]);
   37                  $scope.activate($scope.leftNavList[0]);
   38                  
   ..
   59                  .put(url, dataOut)
   60                  .success(function(data){
   61:                     console.log(data);
   62                      $location.path('/');
   63                  });
   ..
   81          
   82          if(obj.doctype === 'test'){
   83:             console.log('when was this last run', obj.last_run);
   84          }
   85  
   ..
  104                      res = res.replace(h2, '"height":"380"');
  105                      
  106:                     console.log(res);
  107  
  108                      $scope.selected.userTesting = $sce.trustAsHtml(res);
  ...
  135          // else show the new message's comments
  136  
  137:         console.log(message._id, $scope.commentMessage._id, $scope.showCommentToggle);
  138  
  139          // if(){}
  140          if($scope.commentMessage._id === message._id && $scope.showCommentToggle === 'show'){
  141:             console.log('match');
  142              $scope.showCommentToggle = 'hide';
  143              $scope.commentMessage = '';
  ...
  145          }
  146          if($scope.commentMessage._id === message._id && $scope.showCommentToggle === 'hide'){
  147:             console.log('match');
  148              $scope.showCommentToggle = 'show';
  149              return;
  150          }
  151          if ($scope.commentMessage._id !== message._id && $scope.showCommentToggle === 'hide'){
  152:             console.log('fail');
  153              $scope.showCommentToggle = 'show'; 
  154              $scope.commentMessage = message;
  ...
  161  
  162      $scope.addComment = function(comment){
  163:         console.log('add comment', $scope.messages);
  164          if(comment && comment.body.length > 0){
  165              var dataOut = {
  ...
  175                      var msg_idx = _.indexOf(arr, $scope.commentMessage._id);
  176  
  177:                     console.log(msg_idx);
  178                      $scope.messages[msg_idx]._comments.push(data.comment);
  179                  });

/Users/alexleitch/Documents/Heist/scout-dev/public/js/controllers/reportPublic.js:
   17      $http.get('/api/public/report/'+$stateParams.test_id)
   18              .success(function(data){
   19:                 console.log('the report object', data);
   20                  
   21                  $scope.leftNavList = [];
   ..
   28                  _.each(sort, function(obj){
   29                      if(obj.visible){
   30:                         console.log(obj.name); 
   31                          $scope.leftNavList.push(obj);
   32                      }
   ..
   34  
   35                  $scope.messages = data.messages;
   36:                 console.log('messages', $scope.messages);
   37  
   38                  $scope.activate($scope.leftNavList[0]);
   ..
   74          if(obj){
   75              $scope.selected = obj;
   76:             console.log('selected', $scope.selected._id);
   77              // here's where we do the rendering shit for the embeds. Slow. Boo.
   78              if(obj.embed){
   ..
   96                      res = res.replace(h2, '"height":"380"');
   97                      
   98:                     console.log(res);
   99  
  100                      $scope.selected.userTesting = $sce.trustAsHtml(res);
  ...
  125          // else show the new message's comments
  126  
  127:         console.log(message._id, $scope.commentMessage._id, $scope.showCommentToggle);
  128  
  129          // if(){}
  130          if($scope.commentMessage._id === message._id && $scope.showCommentToggle === 'show'){
  131:             console.log('match');
  132              $scope.showCommentToggle = 'hide';
  133              $scope.commentMessage = '';
  ...
  135          }
  136          if($scope.commentMessage._id === message._id && $scope.showCommentToggle === 'hide'){
  137:             console.log('match');
  138              $scope.showCommentToggle = 'show';
  139              return;
  140          }
  141          if ($scope.commentMessage._id !== message._id && $scope.showCommentToggle === 'hide'){
  142:             console.log('fail');
  143              $scope.showCommentToggle = 'show'; 
  144              $scope.commentMessage = message;
  ...
  151  
  152      $scope.addComment = function(comment){
  153:         console.log('add comment', $scope.messages);
  154          if(comment && comment.body.length > 0){
  155              var dataOut = {
  ...
  165                      var msg_idx = _.indexOf(arr, $scope.commentMessage._id);
  166  
  167:                     console.log(msg_idx);
  168                      $scope.messages[msg_idx]._comments.push(data.comment);
  169                  });

/Users/alexleitch/Documents/Heist/scout-dev/public/js/controllers/reset.js:
    8                      function($scope, $http, $location, $stateParams, $rootScope){
    9          
   10:         console.log('password reset controller');    
   11  
   12          $scope.sendToken = function(email){
   ..
   17                  .post(url, dataOut)
   18                  .success(function(data){
   19:                     console.log('success', data);
   20                      $scope.successMsg = data;
   21                  })

/Users/alexleitch/Documents/Heist/scout-dev/public/js/controllers/run.js:
   20              .success(function(data){
   21                  $scope.tests = data;
   22:                 console.log('how is data built', $scope.tests[0].kind);
   23  
   24                  $scope.kind = data[0].kind;
   ..
   43                  .put(url, dataOut)
   44                  .success(function(data){
   45:                     console.log(data);
   46                      if($rootScope.user.onboard === 6 ){
   47                          $location.path('/summary/'+$scope.tests[0]._id);
   ..
   63  
   64          $scope.subscription = function(chan){
   65:             console.log('touched a channel', chan);
   66              // socket.emit('subscribe', { room: chan, test: $stateParams._id });
   67              // socket.emit('channel', { room: chan, test: $stateParams._id });
   ..
   76          socket.on('connect_failed', function(data)
   77          {
   78:             console.log('connect_failed');
   79          });
   80          socket.on('connecting', function(data)
   81          {
   82:             console.log('connecting');
   83          });
   84          socket.on('disconnect', function(data)
   85          {
   86:             console.log('disconnect');
   87  
   88              image.src = "/layout/assets/avatar-binocs.jpg";
   ..
   96          socket.on('error', function(reason)
   97          {
   98:             console.log('error', reason);
   99          });
  100          socket.on('reconnect_failed', function(data)
  101          {
  102:             console.log('reconnect_failed');
  103          });
  104          socket.on('reconnect', function(data)
  105          {
  106:             console.log('reconnect');
  107              socket.emit('channel', {room : $scope.subject.testroom, test: $stateParams._id});
  108          });
  109          socket.on('reconnecting', function(data)
  110          {
  111:             console.log('reconnecting');
  112          });
  113  
  114          socket.on('announce', function(data){
  115:             console.log('announce', data);
  116          });
  117  
  118          socket.on('joined_channel', function(data){ 
  119:             console.log('joined_channel', data);
  120          });
  121  
  122          socket.on('note', function(data){
  123:             console.log('note', data);
  124              $scope.timeline.push(data.note.msg);
  125              $scope.$apply();
  ...
  131  
  132          socket.on('message',function(data) {
  133:             console.log('message');
  134              image.src = "data:image/jpg;base64,"+data;
  135              canvas.width = 358;
  ...
  143      // ANGULAR ROUTES ===================================================
  144          $scope.addTask = function(task){
  145:             console.log('touched addTask', task);
  146              if($scope.adding_task){$scope.adding_task=false;}
  147  
  ...
  153              };
  154  
  155:             console.log('dataOut', dataOut);
  156              
  157              $http
  158                  .post('/api/task/', dataOut)
  159                  .success(function(data){
  160:                     console.log(data);
  161                      $scope.tests[0]._tasks.push(data);
  162                  });
  ...
  165  
  166          $scope.select = function(testIndex, taskIndex) {
  167:             // console.log('task',  $scope.tests[testIndex]._tasks[taskIndex]);
  168  
  169              var test = $scope.tests[testIndex];
  ...
  207  
  208          $scope.addSubject = function(subject){
  209:             console.log('touched addSubject', subject);
  210  
  211              $scope.subject = subject;
  212:             console.log($scope.subject);
  213  
  214              // if(subject.testroom){
  ...
  228                      mixpanel.track('Add Participant Name', {});
  229  
  230:                     console.log('subject', $scope.subject);
  231                      // socket.emit('send:subject_added', {subject: subject});
  232                      socket.emit('channel', {room : $scope.subject.testroom, test: $stateParams._id});
  ...
  234                  })
  235                  .error(function(data){
  236:                     // console.log('Error: ' + data);
  237              });
  238          };
  ...
  241              // here we create a note object
  242              if(message.length <= 0){
  243:                 console.log('nothing');
  244                  return;
  245              } else {
  ...
  256  
  257                  $scope.timeline.push(note);
  258:                 // console.log('message pushing to', $scope.selected._id);
  259  
  260                  // TODO: this will catch things on both sides of the hash. 
  ...
  268                      for (var i=0; i < tagIt.length; ++i) {
  269                          var msg = tagIt[i].replace(hashPull,'');
  270:                         // console.log('tag being pushed', msg)
  271                          note.tags.push(msg);
  272                      }
  ...
  280                      .post(url, data_out)
  281                      .success(function(data){
  282:                         console.log('note back', data);
  283                          // socket.emit('send:note', { note: data });
  284                          $scope.message='';
  ...
  288  
  289          $scope.postTest = function(){
  290:             console.log($scope.subject.testroom);
  291  
  292              var url = '/api/run/'+$stateParams._id;
  ...
  295  
  296              mixpanel.track('Test completed', {});
  297:             // console.log('touched end', data_out);
  298  
  299              // collects all the tests and steps and outputs them as a collected object
  ...
  305                  .post(url, data_out)
  306                  .success(function(data){
  307:                     // console.log('Updated tests', data);
  308                      $location.path('/overview');
  309                  })
  310                  .error(function(data){
  311:                     // console.log('Error: ' + data);
  312                  });
  313  

/Users/alexleitch/Documents/Heist/scout-dev/public/js/controllers/summary.js:
   40                      });
   41                  
   42:                 console.log($scope.leftNavList[0]);
   43                  $scope.activate($scope.leftNavList[0]);
   44              });
   ..
   53              // passes the task to the global variable
   54  
   55:             console.log('touched activate');
   56              $scope.selected = '';
   57              $scope.commentMessage = '';
   ..
   64              
   65              if(obj.doctype === 'test'){
   66:                 console.log('when was this last run', obj.last_run);
   67              }
   68  
   69              if(obj){
   70                  $scope.selected = obj;
   71:                 console.log('selected', obj);
   72              }
   73          };
   ..
   93                  .put(url, dataOut)
   94                  .success(function(data){
   95:                     console.log(data);
   96                      $location.path('/report/'+$stateParams._id);
   97                  });
   ..
  105              // else show the new message's comments
  106  
  107:             console.log(message._id, $scope.commentMessage._id, $scope.showCommentToggle);
  108  
  109              // if(){}
  110              if($scope.commentMessage._id === message._id && $scope.showCommentToggle === 'show'){
  111:                 console.log('match');
  112                  $scope.showCommentToggle = 'hide';
  113                  $scope.commentMessage = '';
  ...
  115              }
  116              if($scope.commentMessage._id === message._id && $scope.showCommentToggle === 'hide'){
  117:                 console.log('match');
  118                  $scope.showCommentToggle = 'show';
  119                  return;
  120              }
  121              if ($scope.commentMessage._id !== message._id && $scope.showCommentToggle === 'hide'){
  122:                 console.log('fail');
  123                  $scope.showCommentToggle = 'show'; 
  124                  $scope.commentMessage = message;
  ...
  194          $scope.saveObject = function(obj){
  195              var url, data;
  196:             console.log('obj embed', obj.embed);
  197              
  198:             // console.log('touched saveObj', obj);
  199              
  200              $scope.getIdFromURL(obj.embed);
  ...
  216                  .put('/api/'+url, data)
  217                  .success(function(doc){
  218:                     console.log(doc);
  219                  });
  220          };
  ...
  276  
  277          $scope.toggleNote = function(user){
  278:             console.log('user for new note', user);
  279              $scope.messageEditToggle = '';
  280              $scope.inputNote = user;
  ...
  338                  .success(function(data){
  339  
  340:                     console.log('new message data', data);
  341  
  342                      $scope.toggleNote();
  ...
  344                      $scope.selected._messages.push(data.msg._id);
  345  
  346:                     console.log('msg list', $scope.messages[data.msg._subject.name]);
  347:                     console.log('selected list', $scope.selected._messages);
  348  
  349                      var indexCheck = _.pluck($scope.leftNavList, 'name');
  350:                     console.log('indexCheck', indexCheck);
  351  
  352                      _.each(data.tags, function(tag){

/Users/alexleitch/Documents/Heist/scout-dev/public/js/controllers/test.js:
   11          function(  $scope, $compile,  $http,  $stateParams,  $state,  $location,  $window,  $rootScope,  $anchorScroll){
   12          
   13:         console.log('loaded test controller');
   14          
   15          $http
   ..
   19                  $scope.tasks = data._tasks;
   20  
   21:                 console.log('test', $scope.test);
   22:                 console.log('tasks', $scope.tasks);
   23                  $scope.showAnchor(1);
   24  
   25              })
   26              .error(function(data) {
   27:                 console.log('Error: ' + data);
   28              });
   29  
   ..
   43                  .put(url, dataOut)
   44                  .success(function(data){
   45:                     console.log(data);
   46                  });
   47          };
   ..
   50          // an effort to manipulate order.... 
   51          $scope.moveTask = function(old_index, up_down){
   52:             console.log(old_index, up_down);
   53              var new_index = old_index + up_down;
   54  
   55:             console.log(new_index);
   56              
   57              $scope.tasks.splice(new_index, 0, $scope.tasks.splice(old_index, 1)[0]);
   ..
   60              var task_idx = _.pluck($scope.tasks, 'task_index');
   61              
   62:             console.log(task_order, task_idx);
   63              // set the stored index of the task properly
   64:             // console.log('did things stay moved', $scope.tasks); // for testing purposes
   65              
   66              // I think if we don't do this, it won't store if another thing's not pressed.
   ..
   70  
   71          $scope.selectPrototype = function(kind){
   72:             console.log('touched prototype', kind);
   73              $scope.test.kind = kind;
   74              mixpanel.track('Type of Test', {'test type' : kind });
   ..
   77          $scope.selectPlatform = function(kind){
   78              $scope.test.platform = kind;
   79:             console.log('touched platform', $scope.test.platform);
   80          };
   81  
   ..
  129  
  130      	$scope.newTask = function(task) {
  131:             console.log('touched add a task');
  132  
  133              task._test = $stateParams.test_id;
  ...
  135              task.index = $scope.tasks.length;
  136              
  137:             console.log(task);
  138              mixpanel.track('Task added', { 'user': $rootScope.user });
  139  
  ...
  144                  .post(url,data_out)
  145                  .success(function(data){
  146:                     console.log('new task added '+ JSON.stringify(data));
  147  
  148                      $scope.tasks.push(data);
  ...
  151                  })
  152                  .error(function(data){
  153:                     console.log(JSON.stringify(data));
  154                  });
  155          };
  ...
  165              $scope.tasks.splice(index, 1);
  166  
  167:             console.log('delete task', url);
  168:             console.log('index', index);
  169  
  170              $http.delete(url)
  171                  .success(function(data){
  172:                     console.log(data);
  173                      $scope.selectedTask = $scope.tasks[$scope.tasks.length-1];
  174                  })
  175                  .error(function(data){
  176:                     console.log('Error: ' + data);
  177                  });
  178          };
  ...
  207  
  208          $scope.batchTask = function(){
  209:             console.log('touched batchTash', $scope.tasks);
  210  
  211              var dataOut = $scope.tasks;
  ...
  215                  .put(url, dataOut)
  216                  .success(function(data){
  217:                     console.log('tasks pushed', data);
  218                  })
  219                  .error(function(data){
  220:                     console.log('error', data);
  221                  });
  222  
  ...
  224  
  225          $scope.updateTask = function(task){
  226:             console.log('touched update task', task._id, task.desc);
  227  
  228              var url = '/api/task/'+task._id;
  ...
  232                  .put(url, data_out)
  233                  .success(function(data){
  234:                     console.log('task has pushed', data);
  235:                     console.log('current test tasklist', data._tasks);
  236                   })
  237                  .error(function(data){
  238:                     console.log('error', data);
  239                  });
  240              
  ...
  252              }
  253  
  254:             console.log('touched update test', test);
  255  
  256              var url = '/api/test/'+$stateParams.test_id;
  ...
  261                  task.index = task_count;
  262                  task_count++;
  263:                 console.log(task.name, task.index);
  264              });
  265  
  266:             console.log($scope.tasks);
  267  
  268              // reminder: this pushes an update to an already-created test
  ...
  270                  .put(url, data_out, {timeout:5000})
  271                  .success(function(data){
  272:                     console.log('test has pushed', data);
  273                  })
  274                  .error(function(data){
  275:                     console.log('error', data);
  276                  });
  277      	};

/Users/alexleitch/Documents/Heist/scout-dev/public/js/controllers/watch.js:
   33          socket.on('connect_failed', function(data)
   34          {
   35:             console.log('connect_failed');
   36          });
   37          socket.on('connecting', function(data)
   38          {
   39:             console.log('connecting');
   40          });
   41          socket.on('disconnect', function(data)
   42          {
   43:             console.log('disconnect');
   44              image.src = "/layout/assets/avatar-binocs.jpg";
   45              canvas.width = 358;
   ..
   51          socket.on('error', function(reason)
   52          {
   53:             console.log('error');
   54          });
   55          socket.on('reconnect_failed', function(data)
   56          {
   57:             console.log('reconnect_failed');
   58          });
   59          socket.on('reconnect', function(data)
   60          {
   61:             console.log('reconnect');
   62          });
   63          socket.on('reconnecting', function(data)
   64          {
   65:             console.log('reconnecting');
   66          });
   67  
   68          socket.on('announce', function(data){
   69:             console.log('announce', data);
   70          });
   71  
   72          socket.on('note', function(data){
   73:             console.log('note', data);
   74              $scope.timeline.push(data.note.msg);
   75              $scope.$apply();
   ..
   91  
   92          $scope.subscription = function(chan){
   93:             console.log('touched a channel', chan);
   94              socket.emit('subscribe', { room: chan });
   95              socket.emit('channel', { room: chan });
   ..
  100  
  101          $scope.joinRoom = function(room){
  102:             console.log('I want to join this room', $scope.selectedRoom);
  103              // socket.emit('join_room', $scope.selectedRoom.room);
  104              $scope.live = true;
  ...
  120  
  121              $scope.timeline.push(note);
  122:             // console.log('message pushing to', $scope.selected._id);
  123  
  124              // TODO: this will catch things on both sides of the hash. 
  ...
  132                  for (var i=0; i < tagIt.length; ++i) {
  133                      var msg = tagIt[i].replace(hashPull,'');
  134:                     // console.log('tag being pushed', msg)
  135                      note.tags.push(msg);
  136                  }
  137              }
  138              
  139:             // console.log('note tags', note.tags);
  140  
  141              var url = '/api/message/';
  ...
  148                  })
  149                  .error(function(data){
  150:                     // console.log('Error: ' + data);
  151                  });
  152  

/Users/alexleitch/Documents/Heist/scout-dev/public/js/socket.io.js:
 1279  
 1280      // This hackery is required for IE8
 1281:     // where `console.log` doesn't have 'apply'
 1282      window.console
 1283:       && console.log
 1284:       && Function.prototype.apply.call(console.log, console, arguments);
 1285    }
 1286  }
 ....
 3511  
 3512  /**
 3513:  * Invokes `console.log()` when available.
 3514:  * No-op when `console.log` is not a "function".
 3515   *
 3516   * @api public
 ....
 3519  function log() {
 3520    // This hackery is required for IE8,
 3521:   // where the `console.log` function doesn't have 'apply'
 3522    return 'object' == typeof console
 3523:     && 'function' == typeof console.log
 3524:     && Function.prototype.apply.call(console.log, console, arguments);
 3525  }
 3526  
 ....
 3679        args = exports.formatArgs.apply(self, args);
 3680      }
 3681:     var logFn = enabled.log || exports.log || console.log.bind(console);
 3682      logFn.apply(self, args);
 3683    }
 ....
 4739  		var codePoints = ucs2decode(string);
 4740  
 4741: 		// console.log(JSON.stringify(codePoints.map(function(x) {
 4742  		// 	return 'U+' + x.toString(16).toUpperCase();
 4743  		// })));

196 matches across 14 files
